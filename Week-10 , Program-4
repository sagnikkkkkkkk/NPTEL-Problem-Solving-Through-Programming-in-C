//  Week-10 , Program-4

/*
Write a C program to find the root of the equation using Newton Raphson method .
          f(x) = x^3 - 2x - 3
The maximum number of steps are taken as input

Test Case 1          Input :- 10         Output :- Root = 1.893289

Test Case 2          Input :- 4          Output :- Root = 2.059000

Test Case 3          Input :- 2          Output :- Root = 3.465754

Test Case 4          Input :- 5          Output :- Root = 1.908690
*/






#include<stdio.h>
float f(float x);
float df (float x);
int main()
{
    int itr, maxmitr;                                                           // itr is the iteration number and maxitr is the maximum allowable iteration 
    float x0=1.0, x1;                                                           // x0 is the initial value and x1 is result 
    scanf("%d", &maxmitr);                                                     // Taken from the test cases 

                                                                                // use the printf statement as printf("Root = %8.6f\n", x1);
float h;
    for (itr=1; itr<=maxmitr; itr++)
    {
        h=f(x0)/df(x0);
        x1=x0-h;
        x0=x1;
    }
    printf("Root = %8.6f\n", x1);
    return 0;
}
float f(float x)
{
    return x*x*x - 2*x  - 3;
}
float df (float x)
{
    return 3*x*x-2;
}
